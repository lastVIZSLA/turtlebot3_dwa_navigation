<launch>
  <!-- Launch the house world in Gazebo -->

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_house.launch"/>
  <arg name="open_rviz" default="true"/>

  <arg name="scan_topic"     default="scan"/>
  <arg name="initial_pose_x" default="-3.0"/>
  <arg name="initial_pose_y" default="1.0"/>
  <arg name="initial_pose_a" default="0.0"/>



  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>



  <!-- Start the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find turtlebot3_dwa_navigation)/maps/housemap.yaml"/>


  <!-- Start the AMCL localization node -->
  <node name="amcl" pkg="amcl" type="amcl" output="screen">
    
    
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="3000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.20"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_range"           value="3.5"/>
    <param name="laser_max_beams"           value="180"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="base_footprint"/>


  </node>

  <!-- Static transform publisher from base_link to base_footprint -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_base_footprint" args="0 0 0 0 0 0 base_link base_footprint"/>

  <!-- Start the move_base node -->
  <node name="move_base" pkg="move_base" type="move_base" output="screen">
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/dwa_local_planner_params.yaml" command="load"/>
    <rosparam file="$(find turtlebot3_dwa_navigation)/param/move_base_params.yaml" command="load"/>
  </node>

  <!-- Start the script to send goals -->

  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>



  <node name="send_goals" pkg="turtlebot3_dwa_navigation" type="send_goals.py" output="screen"/>
</launch>
